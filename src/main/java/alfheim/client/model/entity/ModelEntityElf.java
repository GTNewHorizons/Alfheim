package alfheim.client.model.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelEntityElf extends ModelBase {
	final ModelRenderer head;
	final ModelRenderer body;
	final ModelRenderer helmet;
	final ModelRenderer rightarm;
	final ModelRenderer rightshoulder;
	final ModelRenderer leftarm;
	final ModelRenderer leftshoulder;
	final ModelRenderer rightleg;
	final ModelRenderer rightboot;
	final ModelRenderer leftleg;
	final ModelRenderer leftboot;
	final ModelRenderer Shape1;
	final ModelRenderer Shape2;
	final ModelRenderer Shape3;
	final ModelRenderer Shape4;
	final ModelRenderer Shape5;
	final ModelRenderer Shape6;
	final ModelRenderer Shape7;
	final ModelRenderer Shape8;
	final ModelRenderer Shape9;
	final ModelRenderer Shape10;
	final ModelRenderer Shape11;
	final ModelRenderer Shape12;
	final ModelRenderer Shape13;
	final ModelRenderer Shape14;
	final ModelRenderer Shape15;
	final ModelRenderer Shape16;
	final ModelRenderer Shape17;
	final ModelRenderer Shape18;
	final ModelRenderer backBag;
	final ModelRenderer frontBelt;
	final ModelRenderer lowerBelt;
	final ModelRenderer upperBelt;
	final ModelRenderer frontBag;

	public ModelEntityElf() {
		textureWidth = 128;
		textureHeight = 64;

		head = new ModelRenderer(this, 0, 0);
		head.addBox(-4F, -8F, -4F, 8, 8, 8);
		head.setRotationPoint(0F, 0F, 0F);
		head.setTextureSize(128, 64);
		head.mirror = true;
		setRotation(head, 0F, 0F, 0F);
		body = new ModelRenderer(this, 16, 16);
		body.addBox(-4F, 0F, -2F, 8, 12, 4);
		body.setRotationPoint(0F, 0F, 0F);
		body.setTextureSize(128, 64);
		body.mirror = true;
		setRotation(body, 0F, 0F, 0F);
		helmet = new ModelRenderer(this, 32, 0);
		helmet.addBox(-4.5F, -8.5F, -4.5F, 9, 4, 9);
		helmet.setRotationPoint(0F, 0F, 0F);
		helmet.setTextureSize(128, 64);
		helmet.mirror = true;
		setRotation(helmet, 0F, 0F, 0F);
		rightarm = new ModelRenderer(this, 40, 16);
		rightarm.addBox(-3F, -2F, -2F, 4, 12, 4);
		rightarm.setRotationPoint(-5F, 2F, 0F);
		rightarm.setTextureSize(128, 64);
		rightarm.mirror = true;
		setRotation(rightarm, 0F, 0F, 0F);
		rightshoulder = new ModelRenderer(this, 76, 17);
		rightshoulder.addBox(-3.5F, -2.5F, -2.5F, 5, 4, 5);
		rightshoulder.setRotationPoint(-5F, 2F, 0F);
		rightshoulder.setTextureSize(128, 64);
		rightshoulder.mirror = true;
		setRotation(rightshoulder, 0F, 0F, 0F);
		leftarm = new ModelRenderer(this, 40, 16);
		leftarm.addBox(-1F, -2F, -2F, 4, 12, 4);
		leftarm.setRotationPoint(5F, 2F, 0F);
		leftarm.setTextureSize(128, 64);
		setRotation(leftarm, 0F, 0F, 0F);
		leftarm.mirror = false;
		leftshoulder = new ModelRenderer(this, 56, 17);
		leftshoulder.addBox(-1.5F, -2.5F, -2.5F, 5, 4, 5);
		leftshoulder.setRotationPoint(5F, 2F, 0F);
		leftshoulder.setTextureSize(128, 64);
		leftshoulder.mirror = true;
		setRotation(leftshoulder, 0F, 0F, 0F);
		rightleg = new ModelRenderer(this, 0, 16);
		rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
		rightleg.setRotationPoint(-2F, 12F, 0F);
		rightleg.setTextureSize(128, 64);
		rightleg.mirror = true;
		setRotation(rightleg, 0F, 0F, 0F);
		rightboot = new ModelRenderer(this, 56, 26);
		rightboot.addBox(-2.5F, 8F, -2.5F, 5, 4, 5);
		rightboot.setRotationPoint(-2F, 12F, 0F);
		rightboot.setTextureSize(128, 64);
		rightboot.mirror = true;
		setRotation(rightboot, 0F, 0F, 0F);
		leftleg = new ModelRenderer(this, 0, 16);
		leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
		leftleg.setRotationPoint(2F, 12F, 0F);
		leftleg.setTextureSize(128, 64);
		setRotation(leftleg, 0F, 0F, 0F);
		leftleg.mirror = false;
		leftboot = new ModelRenderer(this, 76, 26);
		leftboot.addBox(-2.5F, 8F, -2.5F, 5, 4, 5);
		leftboot.setRotationPoint(2F, 12F, 0F);
		leftboot.setTextureSize(128, 64);
		leftboot.mirror = true;
		setRotation(leftboot, 0F, 0F, 0F);
		Shape1 = new ModelRenderer(this, 68, 0);
		Shape1.addBox(-4.5F, -4.5F, -0.5F, 9, 2, 5);
		Shape1.setRotationPoint(0F, 0F, 0F);
		Shape1.setTextureSize(128, 64);
		Shape1.mirror = true;
		setRotation(Shape1, 0F, 0F, 0F);
		Shape2 = new ModelRenderer(this, 0, 32);
		Shape2.addBox(4F, -12F, -5F, 1, 7, 1);
		Shape2.setRotationPoint(0F, 0F, 0F);
		Shape2.setTextureSize(128, 64);
		Shape2.mirror = true;
		setRotation(Shape2, -0.5235988F, 0F, 0F);
		Shape3 = new ModelRenderer(this, 0, 32);
		Shape3.addBox(4F, -13.1F, -6F, 1, 9, 1);
		Shape3.setRotationPoint(0F, 0F, 0F);
		Shape3.setTextureSize(128, 64);
		Shape3.mirror = true;
		setRotation(Shape3, -0.5235988F, 0F, 0F);
		Shape4 = new ModelRenderer(this, 0, 32);
		Shape4.addBox(4F, -11.2F, -4F, 1, 6, 1);
		Shape4.setRotationPoint(0F, 0F, 0F);
		Shape4.setTextureSize(128, 64);
		Shape4.mirror = true;
		setRotation(Shape4, -0.5235988F, 0F, 0F);
		Shape5 = new ModelRenderer(this, 0, 32);
		Shape5.addBox(4F, -10F, -3F, 1, 4, 1);
		Shape5.setRotationPoint(0F, 0F, 0F);
		Shape5.setTextureSize(128, 64);
		Shape5.mirror = true;
		setRotation(Shape5, -0.5235988F, 0F, 0F);
		Shape6 = new ModelRenderer(this, 0, 32);
		Shape6.addBox(4F, -8.3F, -2F, 1, 2, 1);
		Shape6.setRotationPoint(0F, 0F, 0F);
		Shape6.setTextureSize(128, 64);
		Shape6.mirror = true;
		setRotation(Shape6, -0.5235988F, 0F, 0F);
		Shape7 = new ModelRenderer(this, 0, 32);
		Shape7.addBox(4F, -11F, -7F, 1, 7, 1);
		Shape7.setRotationPoint(0F, 0F, 0F);
		Shape7.setTextureSize(128, 64);
		Shape7.mirror = true;
		setRotation(Shape7, -0.5235988F, 0F, 0F);
		Shape8 = new ModelRenderer(this, 0, 32);
		Shape8.addBox(4.1F, -7F, -4.1F, 1, 1, 7);
		Shape8.setRotationPoint(0F, 0F, 0F);
		Shape8.setTextureSize(128, 64);
		Shape8.mirror = true;
		setRotation(Shape8, 0F, 0F, 0F);
		Shape9 = new ModelRenderer(this, 0, 42);
		Shape9.addBox(-5F, -8.3F, -2F, 1, 2, 1);
		Shape9.setRotationPoint(0F, 0F, 0F);
		Shape9.setTextureSize(128, 64);
		Shape9.mirror = true;
		setRotation(Shape9, -0.5235988F, 0F, 0F);
		Shape10 = new ModelRenderer(this, 0, 42);
		Shape10.addBox(-5F, -10F, -3F, 1, 4, 1);
		Shape10.setRotationPoint(0F, 0F, 0F);
		Shape10.setTextureSize(128, 64);
		Shape10.mirror = true;
		setRotation(Shape10, -0.5235988F, 0F, 0F);
		Shape11 = new ModelRenderer(this, 0, 42);
		Shape11.addBox(-5F, -11.2F, -4F, 1, 6, 1);
		Shape11.setRotationPoint(0F, 0F, 0F);
		Shape11.setTextureSize(128, 64);
		Shape11.mirror = true;
		setRotation(Shape11, -0.5235988F, 0F, 0F);
		Shape12 = new ModelRenderer(this, 0, 42);
		Shape12.addBox(-5F, -12F, -5F, 1, 7, 1);
		Shape12.setRotationPoint(0F, 0F, 0F);
		Shape12.setTextureSize(128, 64);
		Shape12.mirror = true;
		setRotation(Shape12, -0.5235988F, 0F, 0F);
		Shape13 = new ModelRenderer(this, 0, 42);
		Shape13.addBox(-5F, -13.1F, -6F, 1, 9, 1);
		Shape13.setRotationPoint(0F, 0F, 0F);
		Shape13.setTextureSize(128, 64);
		Shape13.mirror = true;
		setRotation(Shape13, -0.5235988F, 0F, 0F);
		Shape14 = new ModelRenderer(this, 0, 42);
		Shape14.addBox(-5F, -11F, -7F, 1, 7, 1);
		Shape14.setRotationPoint(0F, 0F, 0F);
		Shape14.setTextureSize(128, 64);
		Shape14.mirror = true;
		setRotation(Shape14, -0.5235988F, 0F, 0F);
		Shape15 = new ModelRenderer(this, 0, 42);
		Shape15.addBox(-5.1F, -7F, -4.1F, 1, 1, 7);
		Shape15.setRotationPoint(0F, 0F, 0F);
		Shape15.setTextureSize(128, 64);
		Shape15.mirror = true;
		setRotation(Shape15, 0F, 0F, 0F);
		Shape16 = new ModelRenderer(this, 68, 13);
		Shape16.addBox(-4.5F, -2.5F, 2.5F, 9, 2, 2);
		Shape16.setRotationPoint(0F, 0F, 0F);
		Shape16.setTextureSize(128, 64);
		Shape16.mirror = true;
		setRotation(Shape16, 0F, 0F, 0F);
		Shape17 = new ModelRenderer(this, 68, 10);
		Shape17.addBox(-4.5F, -2.5F, 0.5F, 9, 1, 2);
		Shape17.setRotationPoint(0F, 0F, 0F);
		Shape17.setTextureSize(128, 64);
		Shape17.mirror = true;
		setRotation(Shape17, 0F, 0F, 0F);
		Shape18 = new ModelRenderer(this, 68, 7);
		Shape18.addBox(-4.5F, -4.5F, -2.5F, 9, 1, 2);
		Shape18.setRotationPoint(0F, 0F, 0F);
		Shape18.setTextureSize(128, 64);
		Shape18.mirror = true;
		setRotation(Shape18, 0F, 0F, 0F);
		backBag = new ModelRenderer(this, 16, 32);
		backBag.addBox(-1F, 8F, 2F, 5, 4, 2);
		backBag.setRotationPoint(0F, 0F, 0F);
		backBag.setTextureSize(128, 64);
		backBag.mirror = true;
		setRotation(backBag, 0F, 0F, 0F);
		frontBelt = new ModelRenderer(this, 0, 52);
		frontBelt.addBox(0.6F, -0.2F, -2.1F, 2, 11, 1);
		frontBelt.setRotationPoint(0F, 0F, 0F);
		frontBelt.setTextureSize(128, 64);
		frontBelt.mirror = true;
		setRotation(frontBelt, 0F, 0F, 0.4363323F);
		lowerBelt = new ModelRenderer(this, 16, 38);
		lowerBelt.addBox(-4F, 10F, -2.2F, 8, 2, 1);
		lowerBelt.setRotationPoint(0F, 0F, 0F);
		lowerBelt.setTextureSize(128, 64);
		lowerBelt.mirror = true;
		setRotation(lowerBelt, 0F, 0F, 0F);
		upperBelt = new ModelRenderer(this, 16, 41);
		upperBelt.addBox(-4F, 0F, -2.2F, 8, 1, 1);
		upperBelt.setRotationPoint(0F, 0F, 0F);
		upperBelt.setTextureSize(128, 64);
		upperBelt.mirror = true;
		setRotation(upperBelt, 0F, 0F, 0F);
		frontBag = new ModelRenderer(this, 6, 52);
		frontBag.addBox(0F, 6F, -4F, 3, 4, 2);
		frontBag.setRotationPoint(0F, 0F, 0F);
		frontBag.setTextureSize(128, 64);
		frontBag.mirror = true;
		setRotation(frontBag, 0F, 0F, 0.4363323F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		head.render(f5);
		body.render(f5);
		helmet.render(f5);
		rightarm.render(f5);
		rightshoulder.render(f5);
		leftarm.render(f5);
		leftshoulder.render(f5);
		rightleg.render(f5);
		rightboot.render(f5);
		leftleg.render(f5);
		leftboot.render(f5);
		Shape1.render(f5);
		Shape2.render(f5);
		Shape3.render(f5);
		Shape4.render(f5);
		Shape5.render(f5);
		Shape6.render(f5);
		Shape7.render(f5);
		Shape8.render(f5);
		Shape9.render(f5);
		Shape10.render(f5);
		Shape11.render(f5);
		Shape12.render(f5);
		Shape13.render(f5);
		Shape14.render(f5);
		Shape15.render(f5);
		Shape16.render(f5);
		Shape17.render(f5);
		Shape18.render(f5);
		backBag.render(f5);
		frontBelt.render(f5);
		lowerBelt.render(f5);
		upperBelt.render(f5);
		frontBag.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f1, float f2, float f3, float f4, float f5, float f6, Entity entity) {
		super.setRotationAngles(f1, f2, f3, f4, f5, f6, entity);
		this.head.rotateAngleY = f4 / (180F / (float) Math.PI);
		this.head.rotateAngleX = f5 / (180F / (float) Math.PI);
		this.helmet.rotateAngleY = this.head.rotateAngleY;
		this.helmet.rotateAngleX = this.head.rotateAngleX;
		this.Shape1.rotateAngleY = this.head.rotateAngleY;
		this.Shape1.rotateAngleX = this.head.rotateAngleX;
		this.Shape2.rotateAngleY = this.head.rotateAngleY;
		this.Shape2.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape3.rotateAngleY = this.head.rotateAngleY;
		this.Shape3.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape4.rotateAngleY = this.head.rotateAngleY;
		this.Shape4.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape5.rotateAngleY = this.head.rotateAngleY;
		this.Shape5.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape6.rotateAngleY = this.head.rotateAngleY;
		this.Shape6.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape7.rotateAngleY = this.head.rotateAngleY;
		this.Shape7.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape8.rotateAngleY = this.head.rotateAngleY;
		this.Shape8.rotateAngleX = this.head.rotateAngleX;
		this.Shape9.rotateAngleY = this.head.rotateAngleY;
		this.Shape9.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape10.rotateAngleY = this.head.rotateAngleY;
		this.Shape10.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape11.rotateAngleY = this.head.rotateAngleY;
		this.Shape11.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape12.rotateAngleY = this.head.rotateAngleY;
		this.Shape12.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape13.rotateAngleY = this.head.rotateAngleY;
		this.Shape13.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape14.rotateAngleY = this.head.rotateAngleY;
		this.Shape14.rotateAngleX = this.head.rotateAngleX - (float) Math.toRadians(30.0);
		this.Shape15.rotateAngleY = this.head.rotateAngleY;
		this.Shape15.rotateAngleX = this.head.rotateAngleX;
		this.Shape16.rotateAngleY = this.head.rotateAngleY;
		this.Shape16.rotateAngleX = this.head.rotateAngleX;
		this.Shape17.rotateAngleY = this.head.rotateAngleY;
		this.Shape17.rotateAngleX = this.head.rotateAngleX;
		this.Shape18.rotateAngleY = this.head.rotateAngleY;
		this.Shape18.rotateAngleX = this.head.rotateAngleX;
		
		this.rightarm.rotateAngleX = MathHelper.cos(f1 * 0.6662F + (float)Math.PI) * 2.0F * f2 * 0.5F;
		this.leftarm.rotateAngleX = MathHelper.cos(f1 * 0.6662F) * 2.0F * f2 * 0.5F;
		this.rightleg.rotateAngleX = MathHelper.cos(f1 * 0.6662F) * 1.4F * f2;
		this.leftleg.rotateAngleX = MathHelper.cos(f1 * 0.6662F + (float)Math.PI) * 1.4F * f2;
		
		this.rightshoulder.rotateAngleX = this.rightarm.rotateAngleX;
		this.leftshoulder.rotateAngleX = this.leftarm.rotateAngleX;
		this.rightboot.rotateAngleX = this.rightleg.rotateAngleX;
		this.leftboot.rotateAngleX = this.leftleg.rotateAngleX;
		
		this.rightarm.rotateAngleZ = this.leftarm.rotateAngleZ = this.rightleg.rotateAngleY = this.leftleg.rotateAngleY = this.rightshoulder.rotateAngleZ = this.leftshoulder.rotateAngleZ = this.rightboot.rotateAngleY = this.leftboot.rotateAngleY = 0.0F;
	}
}
